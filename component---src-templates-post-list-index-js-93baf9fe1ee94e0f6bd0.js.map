{"version":3,"file":"component---src-templates-post-list-index-js-93baf9fe1ee94e0f6bd0.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/blog/list-blog/style.js","webpack://gatsby-starter-default/./src/components/blog/list-blog/index.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/createChainedFunction.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/SafeAnchor.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/PageItem.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Pagination.js","webpack://gatsby-starter-default/./src/components/pagination/style.js","webpack://gatsby-starter-default/./src/components/pagination/index.js","webpack://gatsby-starter-default/./src/templates/post-list/style.js","webpack://gatsby-starter-default/./src/templates/post-list/index.js","webpack://gatsby-starter-default/./src/utils/authors.js"],"sourcesContent":["import styled, { themeGet, device } from \"@theme/utils\";\n\nexport const BlogPostContentArea = styled.div``;\nexport const PostItemWrap = styled.div`\n    margin-bottom: 50px;\n    &:hover {\n        & a {\n            .post-hover {\n                img {\n                    transform: scale(1.15);\n                }\n            }\n        }\n    }\n`;\n\nexport const PostThumb = styled.div`\n    overflow: hidden;\n    position: relative;\n    a {\n        display: flex;\n    }\n`;\n\nexport const MetaDate = styled.div`\n    align-items: center;\n    background-color: #fc6539;\n    display: flex;\n    height: 92px;\n    justify-content: center;\n    padding-top: 8px;\n    line-height: 23px;\n    position: absolute;\n    text-align: center;\n    width: 92px;\n    z-index: 1;\n    bottom: 40px;\n    left: 40px;\n    top: auto;\n    span {\n        display: block;\n        font-family: ${themeGet(\"fonts.heading\")};\n        font-weight: 400;\n        font-size: 38px;\n        letter-spacing: 0;\n        line-height: 1;\n        margin-bottom: 3px;\n    }\n    & a {\n        color: #fff;\n        font-size: 13px;\n        font-weight: 700;\n        display: block;\n        letter-spacing: 1.2px;\n        text-transform: uppercase;\n    }\n`;\n\nexport const ShapeLine = styled.div`\n    border: 2px solid #fff;\n    height: 92px;\n    position: absolute;\n    width: 92px;\n    bottom: 30px;\n    left: 50px;\n    top: auto;\n`;\n\nexport const ListBlogContent = styled.div`\n    background-color: #f7f7f7;\n    bottom: auto;\n    left: auto;\n    padding: 0;\n    position: relative;\n    right: auto;\n    top: auto;\n`;\n\nexport const ListBlogContentInner = styled.div`\n    background-color: #f7f7f7;\n    padding: 29px 20px 24px;\n    ${device.xlarge} {\n        padding: 44px 40px 43px;\n    }\n`;\n\nexport const MetaBox = styled.div`\n    align-items: center;\n    display: flex;\n    justify-content: start;\n    margin-bottom: 31px;\n    .post-category {\n        background-color: #e6e6e6;\n        color: #fc6539;\n        font-size: 13px;\n        font-weight: 700;\n        letter-spacing: 1.2px;\n        min-width: 105px;\n        padding: 2.5px 11px;\n        text-align: center;\n        text-transform: uppercase;\n        transition: 0.3s;\n        -webkit-transition: 0.3s;\n        -moz-transition: 0.3s;\n        -ms-transition: 0.3s;\n        -o-transition: 0.3s;\n    }\n    .post-category {\n        background-color: #fc6539;\n        color: #fff;\n        display: inline-block;\n        font-size: 13px;\n        font-weight: 700;\n        letter-spacing: 1.2px;\n        margin-right: 25px;\n        min-width: 105px;\n        padding: 3px 11px 2px;\n        text-align: center;\n        text-transform: uppercase;\n    }\n    .post-author {\n        color: #595959;\n        display: inline-block;\n        font-weight: 500;\n        .icon {\n            background-color: #e6e6e6;\n            display: inline-block;\n            height: 28px;\n            line-height: 33px;\n            margin-right: 10px;\n            min-width: 28px;\n            text-align: center;\n            width: 28px;\n            transition: 0.3s;\n            .icon-img {\n                max-width: none;\n                transition: 0.1s;\n            }\n        }\n    }\n`;\nexport const Title = styled.h4`\n    margin-bottom: 0;\n    line-height: 1.4;\n`;\nexport const TextDetails = styled.p`\n    margin: 5px 0 0;\n`;\n\nexport const PostFooter = styled.div`\n    align-items: center;\n    background-color: #f7f7f7;\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: -71px;\n    opacity: 1;\n    padding: 1px 34px 32px;\n    visibility: hidden;\n    transition: 0.3s;\n    -webkit-transition: 0.3s;\n    -moz-transition: 0.3s;\n    -ms-transition: 0.3s;\n    -o-transition: 0.3s;\n`;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@components/ui/button\";\nimport { StaticImage, GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { slugify } from \"../../../utils/functions\";\nimport authors from \"../../../utils/authors\";\nimport {\n    PostItemWrap,\n    PostThumb,\n    MetaDate,\n    ShapeLine,\n    ListBlogContent,\n    ListBlogContentInner,\n    MetaBox,\n    Title,\n    TextDetails,\n} from \"./style\";\n\nconst BlogList = ({\n    thume_image,\n    title,\n    date,\n    categories,\n    body,\n    postAuthor,\n    slug,\n}) => {\n    const dateSplit = date.split(\" \");\n    const month = dateSplit[0];\n    const day = dateSplit[1];\n    const image = getImage(thume_image);\n\n    // Author Post page\n    const author = authors.find((x) => x.name === postAuthor);\n\n    return (\n        <PostItemWrap>\n            <PostThumb className=\"post-hover\">\n                <Link to={`/${slug}`}>\n                    <GatsbyImage image={image} alt={title} />\n                </Link>\n                <MetaDate>\n                    <Link to=\"/\">\n                        <span>{day}</span>\n                        {month}\n                    </Link>\n                </MetaDate>\n                <ShapeLine />\n            </PostThumb>\n            <ListBlogContent>\n                <ListBlogContentInner>\n                    <MetaBox>\n                        {categories.map((categorie, i) => (\n                            <Link\n                                className=\"post-category\"\n                                key={`${slugify(categorie)}-${i}`}\n                                to={`/categories/${slugify(categorie)}`}\n                            >\n                                {categorie}\n                            </Link>\n                        ))}\n                        {author && (\n                            <Link className=\"post-author\" to=\"/\">\n                                <span className=\"icon\">\n                                    <StaticImage\n                                        className=\"icon-img\"\n                                        src=\"../../../data/images/icons/admin1.png\"\n                                        alt=\"Icon-Image\"\n                                    />\n                                </span>\n                                By: {author && author.name}\n                            </Link>\n                        )}\n                    </MetaBox>\n                    <Title>\n                        <Link to={`/${slug}`}>{title}</Link>\n                    </Title>\n                    <TextDetails>{body}</TextDetails>\n                    <Button\n                        sx={{ mt: \"20px\" }}\n                        path={`/${slug}`}\n                        size=\"small\"\n                        color=\"border-gradient\"\n                    >\n                        Read More{\" \"}\n                        <i\n                            className=\"flaticon-right-arrow\"\n                            sx={{ fontSize: \"12px\" }}\n                        ></i>\n                    </Button>\n                </ListBlogContentInner>\n            </ListBlogContent>\n        </PostItemWrap>\n    );\n};\n\nBlogList.propTypes = {\n    thume_image: PropTypes.object,\n    title: PropTypes.string,\n    date: PropTypes.string,\n    categories: PropTypes.array,\n    body: PropTypes.string,\n    postAuthor: PropTypes.string,\n    slug: PropTypes.string,\n};\n\nexport default BlogList;\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n  return funcs.filter(function (f) {\n    return f != null;\n  }).reduce(function (acc, f) {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n    if (acc === null) return f;\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\nexport default createChainedFunction;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"disabled\", \"onKeyDown\"];\nimport React from 'react';\nimport createChainedFunction from './createChainedFunction';\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\nvar SafeAnchor = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'a' : _ref$as,\n    disabled = _ref.disabled,\n    onKeyDown = _ref.onKeyDown,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var handleClick = function handleClick(event) {\n    var href = props.href,\n      onClick = props.onClick;\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  }));\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"active\", \"disabled\", \"className\", \"style\", \"activeLabel\", \"children\"],\n  _excluded2 = [\"children\"];\n\n/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nvar PageItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n    disabled = _ref.disabled,\n    className = _ref.className,\n    style = _ref.style,\n    activeLabel = _ref.activeLabel,\n    children = _ref.children,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var Component = active || disabled ? 'span' : SafeAnchor;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active: active,\n      disabled: disabled\n    })\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: \"page-link\",\n    disabled: disabled\n  }, props), children, active && activeLabel && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, activeLabel)));\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label) {\n  if (label === void 0) {\n    label = name;\n  }\n  function Button(_ref2) {\n    var children = _ref2.children,\n      props = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n    return /*#__PURE__*/React.createElement(PageItem, props, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, children || defaultValue), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, label));\n  }\n  Button.displayName = name;\n  return Button;\n}\nexport var First = createButton('First', '«');\nexport var Prev = createButton('Prev', '‹', 'Previous');\nexport var Ellipsis = createButton('Ellipsis', '…', 'More');\nexport var Next = createButton('Next', '›');\nexport var Last = createButton('Last', '»');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"size\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nvar Pagination = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    className = _ref.className,\n    children = _ref.children,\n    size = _ref.size,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/React.createElement(\"ul\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix, size && decoratedBsPrefix + \"-\" + size)\n  }), children);\n});\nPagination.First = First;\nPagination.Prev = Prev;\nPagination.Ellipsis = Ellipsis;\nPagination.Item = PageItem;\nPagination.Next = Next;\nPagination.Last = Last;\nexport default Pagination;","import styled from \"@theme/utils\";\nexport const NavItem = styled.li`\n    background-color: #ececec;\n    display: inline-block;\n    height: 50px;\n    line-height: 48px;\n    margin-right: 10px;\n    padding: 2px;\n    width: 50px;\n    &:hover {\n        background: #fea444;\n        background: linear-gradient(to left, #fea444 0%, #fc6539 100%);\n    }\n\n    &.disabled {\n        position: relative;\n        pointer-events: none;\n        cursor: not-allowed;\n        overflow: hidden;\n        opacity: 0.4;\n    }\n`;\nexport const NavLink = styled.a`\n    background-color: #fff;\n    color: #001d23;\n    display: inline-block;\n    font-size: 15px;\n    font-weight: 700;\n    height: 100%;\n    letter-spacing: 0;\n    text-align: center;\n    width: 100%;\n    &.active {\n        color: #fff;\n        background: #fea444;\n        background: linear-gradient(to left, #fea444 0%, #fc6539 100%);\n    }\n`;\n","import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { NavItem, NavLink } from \"./style\";\n\nconst PaginationLinks = ({ currentPage, numberOfPages }) => {\n    const isFirst = currentPage === 1;\n    const isLast = currentPage === numberOfPages;\n    const previousPage =\n        currentPage - 1 === 1\n            ? \"/blog/\"\n            : \"/blog/\" + (currentPage - 1).toString();\n    const nextPage = \"/blog/\" + (currentPage + 1).toString();\n\n    return (\n        <Pagination>\n            {isFirst ? (\n                <NavItem className=\"disabled\">\n                    <NavLink href=\"/blog/\">Next</NavLink>\n                </NavItem>\n            ) : (\n                <NavItem>\n                    <NavLink href={previousPage}>Next</NavLink>\n                </NavItem>\n            )}\n            {Array.from({ length: numberOfPages }, (_, i) =>\n                currentPage === i + 1 ? (\n                    <NavItem key={`page-number-${i + 1}`}>\n                        <NavLink\n                            className=\"active\"\n                            href={`/blog${i === 0 ? \"\" : \"/\" + (i + 1)}`}\n                        >\n                            {i + 1}\n                        </NavLink>\n                    </NavItem>\n                ) : (\n                    <NavItem key={`page-number-${i + 1}`}>\n                        <NavLink\n                            href={`${i === 0 ? \"/blog\" : \"/blog/\" + (i + 1)}`}\n                        >\n                            {i + 1}\n                        </NavLink>\n                    </NavItem>\n                )\n            )}\n            {isLast ? (\n                <NavItem className=\"disabled\">\n                    <NavLink href={nextPage}>Prev</NavLink>\n                </NavItem>\n            ) : (\n                <NavItem>\n                    <NavLink href={nextPage}>Prev</NavLink>\n                </NavItem>\n            )}\n        </Pagination>\n    );\n};\n\nPaginationLinks.propTypes = {\n    currentPage: PropTypes.number,\n    numberOfPages: PropTypes.number,\n};\n\nexport default PaginationLinks;\n","import styled, { device } from \"@theme/utils\";\n\nexport const BlogDetailsArea = styled.section`\n    padding: 70px 0 280px;\n    ${device.medium} {\n        padding: 100px 0 300px;\n    }\n    ${device.large} {\n        padding: 120px 0 300px;\n    }\n    ${device.xlarge} {\n        padding: 150px 0 390px;\n    }\n`;\n\nexport const BlogPostContentArea = styled.div`\n    ${device.large} {\n        padding-right: 50px;\n    }\n`;\n","import PropTypes from \"prop-types\";\nimport Layout from \"@layout\";\nimport SEO from \"@components/seo\";\nimport PageBreadcrumb from \"../../components/pagebreadcrumb\";\nimport { graphql } from \"gatsby\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport BlogSidebar from \"@containers/blog/blog-sideber\";\nimport BlogList from \"../../components/blog/list-blog\";\nimport PaginationLinks from \"../../components/pagination\";\nimport { BlogPostContentArea, BlogDetailsArea } from \"./style\";\n\nconst PostList = ({ location, data, pageContext, ...props }) => {\n    const listBlogData = data.allMarkdownRemark.edges;\n    const { currentPage, numberOfPages } = pageContext;\n\n    return (\n        <Layout>\n            <SEO\n                title={\"Page 2 of 6 - Collections, News, Tips by Givest\"}\n                pathname=\"/\"\n                isBlogPost\n            />\n            <PageBreadcrumb\n                pageContext={pageContext}\n                location={location}\n                title=\"Blog Post\"\n            />\n            <BlogDetailsArea>\n                <Container>\n                    <Row>\n                        <Col lg={8}>\n                            <BlogPostContentArea>\n                                {listBlogData &&\n                                    listBlogData.map((blog, i) => {\n                                        return (\n                                            <BlogList\n                                                key={i}\n                                                title={\n                                                    blog.node.frontmatter.title\n                                                }\n                                                thume_image={\n                                                    blog.node.frontmatter\n                                                        .thume_image\n                                                }\n                                                categories={\n                                                    blog.node.frontmatter\n                                                        .categories\n                                                }\n                                                body={blog.node.excerpt}\n                                                date={\n                                                    blog.node.frontmatter.date\n                                                }\n                                                slug={blog.node.fields.slug}\n                                                postAuthor={\n                                                    blog.node.frontmatter.author\n                                                }\n                                            />\n                                        );\n                                    })}\n                            </BlogPostContentArea>\n\n                            <PaginationLinks\n                                currentPage={currentPage}\n                                numberOfPages={numberOfPages}\n                            />\n                        </Col>\n                        <Col lg={4}>\n                            <BlogSidebar />\n                        </Col>\n                    </Row>\n                </Container>\n            </BlogDetailsArea>\n        </Layout>\n    );\n};\n\nPostList.propTypes = {\n    data: PropTypes.object,\n    location: PropTypes.object,\n    pageContext: PropTypes.object,\n};\n\nexport const PlstListQuery = graphql`\n    query postListQuery($skip: Int!, $limit: Int!) {\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n            limit: $limit\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        author\n                        categories\n                        date(formatString: \"MMMM DD YYYY\")\n                        tags\n                        quote_text\n                        title\n                        thume_image {\n                            childImageSharp {\n                                gatsbyImageData(width: 750, height: 400)\n                            }\n                        }\n                    }\n                    fields {\n                        slug\n                    }\n                    excerpt(pruneLength: 100, truncate: true)\n                }\n            }\n        }\n    }\n`;\nexport default PostList;\n","const authors = [\r\n    {\r\n        name: \"Marinda \",\r\n        imageUrl: \"../../static/images/author/author-1.png\",\r\n        bio: \"Jowel been a front-end and UI designer for over 10 years. He helps develop HasThemes premium training products.\",\r\n        facebook: \"https://facebook.com/\",\r\n        twitter: \"https://twitter.com/\",\r\n        google: \"https://google.com/\",\r\n    },\r\n    {\r\n        name: \"Roderick\",\r\n        imageUrl: \"../../static/images/author/author-2.png\",\r\n        bio: \"She is a lawyer, podcaster, speaker, and writer. As an educational content director, he helps develop HasThemes premium training products.\",\r\n        facebook: \"https://facebook.com/\",\r\n        twitter: \"https://twitter.com/\",\r\n        google: \"https://google.com/\",\r\n    },\r\n];\r\n\r\nmodule.exports = authors;\r\n"],"names":["PostItemWrap","styled","PostThumb","MetaDate","themeGet","ShapeLine","ListBlogContent","ListBlogContentInner","device","MetaBox","Title","TextDetails","thume_image","title","date","categories","body","postAuthor","slug","dateSplit","split","month","day","image","getImage","author","authors","x","name","className","Link","to","G","alt","map","categorie","i","key","slugify","S","src","sx","mt","path","size","color","fontSize","_len","arguments","length","funcs","Array","_key","filter","f","reduce","acc","Error","_len2","args","_key2","apply","this","_excluded","isTrivialHref","href","trim","SafeAnchor","_ref","ref","_ref$as","as","Component","disabled","onKeyDown","props","handleClick","event","onClick","preventDefault","stopPropagation","role","tabIndex","displayName","_excluded2","PageItem","active","style","activeLabel","children","defaultProps","createButton","defaultValue","label","Button","_ref2","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","decoratedBsPrefix","Item","NavItem","NavLink","currentPage","numberOfPages","isFirst","isLast","previousPage","toString","nextPage","from","_","BlogDetailsArea","BlogPostContentArea","location","data","pageContext","listBlogData","allMarkdownRemark","edges","pathname","isBlogPost","Container","Row","Col","lg","blog","node","frontmatter","excerpt","fields","module","exports","imageUrl","bio","facebook","twitter","google"],"sourceRoot":""}